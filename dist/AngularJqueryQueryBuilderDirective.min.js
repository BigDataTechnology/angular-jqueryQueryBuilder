angular.module("angular-jquery-querybuilder").directive("queryBuilderr",[function(){return{restrict:"AE",scope:{builder:"="},link:function(e,r){var u,i,l,t,n,d,a;return d=function(){return r[0].queryBuilder.setRules(l())},i=function(){if(e.builder.api)return e.builder.api.isValid=function(){return r[0].queryBuilder.validate()},e.builder.api.getRules=function(){return r[0].queryBuilder.getRules()},e.builder.api.updateRules=d,e.builder.api.init=n,e.builder.builder=n},a=function(){return r.on("afterUpdateRuleValue.queryBuilder    afterUpdateRuleFilter.queryBuilder afterUpdateRuleOperator.queryBuilder afterUpdateGroupCondition.queryBuilder afterReset.queryBuilder              afterMove.queryBuilder afterSetFilters.queryBuilder         afterInvert.queryBuilder afterDeleteRule.queryBuilder         afterDeleteGroup.queryBuilder",function(){var u;if(u=r[0].queryBuilder.getRules(),!angular.equals(u,e.builder.rules)&&((null!=u?u.condition:void 0)||(null!=u?u.rules:void 0)))return e.$emit("QueryBuilderValueChanged")})},l=function(){var r,u;return(null!=(r=e.builder.rules)?r.condition:void 0)||(null!=(u=e.builder.rules)?u.rules:void 0)?e.builder.rules:{condition:"OR",rules:[]}},u=function(){var r,u,i,t;if(u={filters:e.builder.filters,rules:l()},e.builder.config){i=e.builder.config;for(r in i)t=i[r],u[r]=t}return u},n=function(){return r.queryBuilder(u())},(t=function(){return n(),i(),a()})()}}}]);